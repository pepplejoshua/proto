fn rot13(reg str) str {
    map_of_chars : {char, char} = {}
    A_ascii :: 65; M_ascii :: 77; N_ascii :: 78; Z_ascii :: 90
    a_ascii :: 97; m_ascii :: 109; n_ascii :: 110; z_ascii :: 122
    i := A_ascii
    for {
        ch :: make_char(i); subst := '0'
        if (i >= N_ascii && i <= Z_ascii) || (i >= n_ascii && i <= z_ascii) {
            subst = make_char(i - 13)
        } else {
            subst = make_char(i + 13)
        }
        map_of_chars.insert(ch, subst)
        i += 1
        if i > z_ascii {
            break
        }
        if i > Z_ascii && i < a_ascii {
            i = a_ascii
        }
    }

    new_str := ""
    for ch in reg {
        subst :: map_of_chars.get(ch)
        if subst.is_none() {
            new_str += ch
        } else {
            new_str += subst.unwrap()
        }
    }

    return new_str
}

fn main() int {
    encrypted := rot13("My name is Joshua Pepple! Find me!")
    reg := rot13(encrypted)
    println(encrypted)
    println(reg)
    return 0
}
