// all credits to GingerBill for writing this:
// https://www.gingerbill.org/article/2015/08/19/defer-in-cpp/
// and to Caleb (https://github.com/caleb-o) for pointing it out to me.
template<typename Fn>
struct DeferExec {
  Fn f;
  DeferExec(Fn f) : f(f) {}
  ~DeferExec() { f(); }
};

template<typename Fn>
DeferExec<Fn> __defer_func__(Fn f) {
  return DeferExec<Fn>(f);
}

#define DEFER_1(x, y) x##y
#define DEFER_2(x, y) DEFER_1(x, y)
#define DEFER_3(x)    DEFER_2(x, __COUNTER__)
#define defer(code)   auto DEFER_3(_defer_) = __defer_func__([&](){code;})
