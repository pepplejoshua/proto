---
source: src/parser/pparser.rs
expression: result
input_file: src/parser/parser_inputs/structs.pr
---
code_str_repr:
  - // This is a sample for user defined structs
  - // simple struct that uses defaults
  - struct SourceFile
  - "path : str"
  - "text : str"
  - "version :: 1;"
  - struct DiagInfo
  - "error : str"
  - "flat_index : uint"
  - "col : uint"
  - "snippet : str"
  - "line : uint"
  - ""
  - ""
  - fn new() SourceFile
  - "return SourceFile.(path: \"\", text: \"\");"
  - ""
  - ""
  - ""
  - fn main() void
  - "// since we allow defaults, we can focus on the"
  - // members we care about initializing
  - "srcA := SourceFile.(path: \"srcA\", text: \"textA\");"
  - "srcB := SourceFile.new();"
  - // alias DiagnosticInfo SourceFile.DiagInfo;
  - ""
lexer_errors: []
parser_errors: []
parse_warning: []

