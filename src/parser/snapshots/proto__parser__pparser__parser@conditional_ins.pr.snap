---
source: src/parser/pparser.rs
expression: result
input_file: src/parser/parser_inputs/conditional_ins.pr
---
code_str_repr:
  - fn main() void
  - "a := 0;"
  - "b := \"windows\";"
  - "if [b == \"windows\"]:"
  - a = 1;
  - "else if [b == \"linux\"]:"
  - a = 2;
  - "else if [b == \"mac\"]:"
  - a = 3;
  - "else:"
  - a = 4;
  - ""
  - "if false:"
  - "else:"
  - ""
  - "if true:"
  - "else if false:"
  - "else:"
  - ""
  - "r := 1;"
  - "res :: [r == 0] ? \"equal\" : \"unequal\";"
  - "res1 :: [r == 0] ? \"equal\" : ([r == -1] ? \"lhs is greater\" : \"rhs is greater\");"
  - "res2 :: [r != 0] ? ([r == -1] ? \"lhs is greater\" : \"rhs is greater\") : \"equal\";"
  - "num :: ([r > 0] ? true : false) ? \"positive\" : \"negative\";"
  - ""
lexer_errors: []
parser_errors: []
parse_warning: []

